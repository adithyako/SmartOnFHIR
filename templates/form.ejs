<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8" />
    <title>EPIC on FHIR Questionnaire App</title>
    <script src="https://cdn.jsdelivr.net/npm/fhirclient/build/fhir-client.js"></script>
</head>
<body>
    <div class="header">
        <h1>EPIC on FHIR Questionnaire App</h1>
    </div>

    <div class="pagebox">
        <div class="questionnaire-container">
            <div class="container">
                <div class="questionnaire-list">
                    <h3>Featured Questionnaires:</h3>
                    <ul>
                        <li onclick="loadQuestionnaire()">AHC HRSN Screening</li>
                    </ul>
                </div>
                <div class="form-display" id="formContainer">
                    <!-- Form will be loaded here -->
                </div>
            </div>
            <div id="responseContainer">
                <h3>Questionnaire Responses:</h3>
                <div id="responsesList"></div>
            </div>
            <div id="test"></div>
        </div>

        <div class="AHC">
            <div class="save-menu">
                <button onclick="saveResponse()">Generate QuestionnaireResponse</button>
            </div>
            <link href="https://lhcforms-static.nlm.nih.gov/lforms-versions/34.0.0/webcomponent/styles.css" media="screen" rel="stylesheet" />
            <script src="https://lhcforms-static.nlm.nih.gov/lforms-versions/34.0.0/webcomponent/assets/lib/zone.min.js"></script>
            <script src="https://lhcforms-static.nlm.nih.gov/lforms-versions/34.0.0/webcomponent/lhc-forms.js"></script>
            <script src="https://lhcforms-static.nlm.nih.gov/lforms-versions/34.0.0/fhir/R4/lformsFHIR.min.js"></script>
        </div>
    </div>

    <script>
        FHIR.oauth2.ready()
            .then(function (client) {
                myapp.smart = client;
                console.log(client);
            })
            .catch(function (error) {
                console.error("Error during FHIR client initialization:", error);
                alert("Error during FHIR client initialization: " + error.message);
            });

        function loadQuestionnaire() {
            // Ensure the client is ready and the user is authenticated
            FHIR.oauth2.ready().then(function (client) {
                // Fetch the questionnaire JSON; replace 'url_to_questionnaire' with the actual URL to fetch the questionnaire
                fetch('url_to_questionnaire')
                    .then(response => response.json())
                    .then(questionnaire => {
                        LForms.Util.addFormToPage(questionnaire, 'formContainer');
                    })
                    .catch(error => {
                        console.error("Error fetching questionnaire:", error);
                        alert("Error fetching questionnaire: " + error.message);
                    });
            }).catch(function (error) {
                console.error("Error during FHIR client initialization:", error);
                alert("Error during FHIR client initialization: " + error.message);
            });
        }

        function refreshTokenIfNeeded(client) {
            if (client.shouldRefresh()) {
                client.refresh().then(updatedClient => {
                    console.log("Token refreshed!");
                }).catch(error => {
                    console.error("Failed to refresh token:", error);
                    alert("Failed to refresh token: " + error.message);
                });
            }
        }

        function saveResponse() {
            try {
                let qr = LForms.Util.getFormFHIRData('QuestionnaireResponse', 'R4');
                const formData = JSON.stringify(qr, null, 2);

                // Display the JSON string in an alert
                alert("Generated QuestionnaireResponse: " + formData);

                // Also display it in the test div
                document.querySelector("#test").innerHTML = formData;
            } catch (error) {
                console.error("Error generating QuestionnaireResponse:", error);
                alert("Error generating QuestionnaireResponse: " + error.message);
            }
        }
    </script>
</body>
</html>
